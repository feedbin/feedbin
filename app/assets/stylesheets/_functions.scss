@mixin respond-to($media) {
	@if $media == ipad {
		@media only screen and (max-width: 1024px) { @content; }
	}
	@else if $media == hidpi {
		@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
			@content;
		}
	}
	@else if $media == screen-xs {
		@media (min-width: 480px) {
			@content;
		}
	}
	@else if $media == screen-sm {
		@media (min-width: 768px) {
			@content;
		}
	}
	@else if $media == screen-md {
		@media (min-width: 992px) {
			@content;
		}
	}
	@else if $media == screen-lg {
		@media (min-width: 1200px) {
			@content;
		}
	}
}

@mixin arrow($x-position, $y-position, $arrow-color, $arrow-color-night, $arrow-color-sunset, $shadow-color, $shadow-color-night, $shadow-color-sunset, $origin:left, $invert:false) {
	&:before {
		@if $origin == left {
			left: $x-position;
		}
		@else {
			right: $x-position;
		}
		@if $invert == true {
			border-bottom: 6px solid $shadow-color;
		}
		@else {
			border-top: 6px solid $shadow-color;
		}
		top: $y-position;
		position: absolute;
		border-right: 6px solid rgba(0, 0, 0, 0);
		border-left: 6px solid rgba(0, 0, 0, 0);
		content: '';
		.theme-night & {
			@if $invert == true {
				border-bottom-color: $shadow-color-night;
			}
			@else {
				border-top-color: $shadow-color-night;
			}
		}
		.theme-sunset & {
			@if $invert == true {
				border-bottom-color: $shadow-color-sunset;
			}
			@else {
				border-top-color: $shadow-color-sunset;
			}
		}
		@content;
	}
	&:after {
		@if $origin == left {
			left: $x-position + 1;
		}
		@else {
			right: $x-position + 1;
		}
		@if $invert == true {
			border-bottom: 5px solid $arrow-color;
			top: $y-position + 2;
		}
		@else {
			border-top: 5px solid $arrow-color;
			top: $y-position;
		}
		position: absolute;
		border-right: 5px solid rgba(0, 0, 0, 0);
		border-left: 5px solid rgba(0, 0, 0, 0);
		content: '';
		.theme-night & {
			@if $invert == true {
				border-bottom-color: $arrow-color-night;
			}
			@else {
				border-top-color: $arrow-color-night;
			}
		}
		.theme-sunset & {
			@if $invert == true {
				border-bottom-color: $arrow-color-sunset;
			}
			@else {
				border-top-color: $arrow-color-sunset;
			}
		}
		@content;
	}
}

@mixin share-icon($x-offset, $y-offset) {
    background-repeat: no-repeat;
    background-position: 30px + $x-offset 12px + $y-offset;
    @media (max-width: 528px) {
        background-position: 15px + $x-offset 12px + $y-offset;
    }
}

@mixin settings-row {
    padding: 15px 30px;
    @media (max-width: 528px) {
        padding-right: 15px;
        padding-left: 15px;
    }
    .modal & {
        @include padding(14px, 24px, 14px, 24px, 14px, 16px, 14px, 16px);
    }
}

@mixin padding($top, $right, $bottom, $left, $top-small, $right-small, $bottom-small, $left-small) {
    padding: $top $right $bottom $left;
    @media (max-width: 528px) {
        padding: $top-small $right-small $bottom-small $left-small;
    }
}

@mixin theme($property, $default, $night, $sunset, $root: false) {
    #{$property}: $default;
    @if $root {
        @at-root {
            #{selector-append(".theme-night", &)} {
                #{$property}: $night;
            }
            #{selector-append(".theme-sunset", &)} {
                #{$property}: $sunset;
            }
        }
    }
    @else {
        .theme-night & {
            #{$property}: $night;
        }
        .theme-sunset & {
            #{$property}: $sunset;
        }
    }
}

@mixin box-shadow($args...) {
    @include theme("box-shadow", $args...);
}

@mixin color($args...) {
    @include theme("color", $args...);
}

@mixin background($args...) {
    @include theme("background", $args...);
}

@mixin background-color($args...) {
    @include theme("background-color", $args...);
}

@mixin background-image($args...) {
    @include theme("background-image", $args...);
}

@mixin border-color($args...) {
    @include theme("border-color", $args...);
}

@mixin border($args...) {
    border-width: 1px;
    border-style: solid;
    @include border-color($args...);
}

@mixin border-top($args...) {
    border-top-width: 1px;
    border-top-style: solid;
    @include border-color($args...);
}

@mixin border-right($args...) {
    border-right-width: 1px;
    border-right-style: solid;
    @include border-color($args...);
}

@mixin border-bottom($args...) {
    border-bottom-width: 1px;
    border-bottom-style: solid;
    @include border-color($args...);
}

@mixin border-left($args...) {
    border-left-width: 1px;
    border-left-style: solid;
    @include border-color($args...);
}

@mixin stroke($args...) {
    @include theme("stroke", $args...);
}

@mixin fill($args...) {
    @include theme("fill", $args...);
}
